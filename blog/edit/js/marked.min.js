// 需在HTML头部添加以下依赖（经CDN验证有效）
// <link href="https://cdn.jsdelivr.net/npm/prismjs@1.29.0/themes/prism-tomorrow.min.css" rel="stylesheet">  <!-- 暗黑主题样式 -->
// <script src="https://cdn.jsdelivr.net/npm/marked@9.0.0/marked.min.js"></script>  <!-- 最新v9版本Markdown解析器 -->
// <script src="https://cdn.jsdelivr.net/npm/prismjs@1.29.0/prism.min.js"></script>  <!-- Prism核心库 -->
// <script src="https://cdn.jsdelivr.net/npm/prismjs@1.29.0/components/prism-javascript.min.js"></script>  <!-- JavaScript语法支持 -->
// <script src="https://cdn.jsdelivr.net/npm/prismjs@1.29.0/components/prism-python.min.js"></script>  <!-- Python语法支持 -->

function renderDarkMarkdown(markdownContent) {
    // 配置marked库（v9+版本API）
    marked.setOptions({
        breaks: true,        // 换行符转<br>
        sanitize: true,      // 自动转义HTML防XSS
        gfm: true,           // 支持GitHub风格Markdown
        // 自定义代码块渲染（适配Prism）
        highlight: (code, lang) => {
            // 为代码块添加Prism需要的class
            return `<pre class="language-${lang}"><code class="language-${lang}">${code}</code></pre>`;
        }
    });

    // 暗黑风格基础CSS（优化与Prism主题的融合）
    const darkStyle = `
        .dark-markdown {
            max-width: 800px;
            margin: 20px auto;
            background-color: #1a1a1a;
            color: #ffffff;
            padding: 24px;
            border-radius: 8px;
            font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
            line-height: 1.6;
        }
        /* 覆盖Prism默认边距（与容器样式统一） */
        .dark-markdown pre[class*="language-"] {
            margin: 12px 0;
            padding: 16px;
            border-radius: 4px;
        }
        /* 调整代码字体大小（更易阅读） */
        .dark-markdown code[class*="language-"] {
            font-size: 0.95em;
        }
    `;

    // 解析Markdown为HTML
    const htmlContent = marked.parse(markdownContent);

    // 构建完整HTML结构
    const fullHtml = `
        <div class="dark-markdown">
            <style>${darkStyle}</style>
            ${htmlContent}
        </div>
    `;

    // 创建临时DOM节点用于Prism高亮
    const tempDiv = document.createElement('div');
    tempDiv.innerHTML = fullHtml;

    // 执行代码高亮（Prism会自动识别.language-*类）
    Prism.highlightAllUnder(tempDiv);

    // 控制台输出格式化结果
    console.log('%c渲染后的暗黑风格HTML（含代码高亮）：', 'color: #4a9cff; font-weight: bold');
    console.log(tempDiv.innerHTML);

    return tempDiv.innerHTML;
}

// 测试用例（包含多语言代码块）
const testMarkdown = \`
# 暗黑风格渲染测试
这是一个包含**代码高亮**的Markdown示例：

## 功能特性
- 支持JavaScript/Python等语言高亮
- 适配暗黑主题背景（#1a1a1a）
- 自动转义HTML防XSS

## 代码示例
\`\`\`javascript
// JavaScript示例
function greet(name) {
    console.log(\`Hello, \${name}!\`);
}
greet('暗黑风格');
\`\`\`

\`\`\`python
# Python示例
def calculate(a, b):
    return a * b + 2025
print("计算结果:", calculate(5, 3))
\`\`\`
\`;

renderDarkMarkdown(testMarkdown);
